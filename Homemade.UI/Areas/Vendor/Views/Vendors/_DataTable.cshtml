@inject Homemade.BLL.BLPermission blPermission
@{
    var IsPermissionView = @blPermission.GetPermissionByUserAndController(User.Identity.Name, (int)Homemade.BLL.ControllerEnum.Vendors, (int)Homemade.BLL.ActionEnum.View) ? 1 : 0;
    var IsPermissionUpdate = @blPermission.GetPermissionByUserAndController(User.Identity.Name, (int)Homemade.BLL.ControllerEnum.Vendors, (int)Homemade.BLL.ActionEnum.Update) ? 1 : 0;
    var IsPermissionDelete = @blPermission.GetPermissionByUserAndController(User.Identity.Name, (int)Homemade.BLL.ControllerEnum.Vendors, (int)Homemade.BLL.ActionEnum.Delete) ? 1 : 0;
}
<script>
    var table;
    $(document).ready(function () {
        table = $('#tbl_Vendor').DataTable({
            pageLength: 10,
            pagijngType: "full_numbers",
            serverSide: true,
            processing: true,
            lengthMenu: [[5, 10, 20, 20, 20,30, 100], [5, 10 ,20 , 20, 20 , 30, 100]],
            sAjaxSource: '@Url.Action("LoadTable")',
            sServerMethod: "POST",
            bPaginate: true,
            paging: true,
            columns: [
                {
                    "data": null,
                    "sortable": false,
                    render: function (data, type, row, meta) {
                        return '<label>' + (meta.row + meta.settings._iDisplayStart + 1) + '</label>';
                    }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        var datalogo = data.logo;
                        return '<label><img src="' + datalogo +'" class="img" width="100" height="100" /></label>';
                    }

                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<input type="hidden" value="' + data.vendorsID + '"/><label class="arName">' + data.storeName + '</label>';
                    }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label >' + data.regionName + '</label>';
                    }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label >' + data.mobileNo + '</label>';
                    }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label >' + data.regType + '</label>';
                    }
                },
                //{
                //    data: null,
                //    bSortable: true,
                //    render: function (data, type, row) {
                //        return '<label >' + data.deliveryTypeName + '</label>';
                //    }
                //},
                {
                    data: null,
                    bSortable: true,
                    //render: function (data, type, row) {
                    //    return '<label >' + getFormatDate(data.createDateString) + '</label>';
                    //}
                    render: function (data, type, row) { return '<label>' + getFormatDate(data.createDate) + " " + data.createDateString + '</label>' }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label >' + data.isVacString + '</label>';
                    }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        return '<label >' + data.entryString + '</label>';
                    }
                },
                {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        var IsEnabled = data.isEnabled == 1 ? "<span style='background: #ddf7e8;color: #3c763d;padding:8px;'>@Homemade.UI.Resources.Homemade.Enabled</span>"
                            : "<span style='background: #f9eae8;color:#c54736;padding:8px;'>@Homemade.UI.Resources.Homemade.Disabled</span>";

                        return '<label>' + IsEnabled + '</label>';
                    }
                },
                 {
                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        var IsEnable = data.isEnable == 1 ? "<span style='background: #ddf7e8;color: #3c763d;padding:8px;'>@Homemade.UI.Resources.Homemade.Available</span>"
                            : "<span style='background: #f9eae8;color:#c54736;padding:8px;'>@Homemade.UI.Resources.Homemade.NotAvailable</span>";

                        return '<label>' + IsEnable + '</label>';
                    }
                },
                {

                    data: null,
                    bSortable: true,
                    render: function (data, type, row) {
                        var databutton = '';
                        var xtitle = data.isEnabled ? "@Homemade.UI.Resources.Homemade.Disable" : "@Homemade.UI.Resources.Homemade.Enable";
                        var icon = data.isEnabled ? "fa fa-ban" : "fa fa-check";
                        var xtitleEnable = data.isEnable ? "@Homemade.UI.Resources.Homemade.NotAvailable" : "@Homemade.UI.Resources.Homemade.Available";
                        var iconEnable = data.isEnable ? "fa fa-eye" : "fa fa-eye-slash";
                        if (@IsPermissionView == 1) {
                            databutton += ` <a class="btn btn-xs btn-info" href="@Url.Action("Details")/${data.vendorsGuid}" type="button" data-toggle="tooltip" title="@Homemade.UI.Resources.Homemade.Details">
                                        <i class="fa fa-search"></i>
                                    </a>`;
                        }
                        if (@IsPermissionUpdate == 1) {
                            databutton += '<button class="btn btn-xs btn-warning" style="margin:4px" type="button" data-toggle="tooltip" onclick="ChangeStatue(this);" data-id="' + data.vendorsID + '" title="' + xtitle + '"><i class="' + icon + '"></i></button>';
                            databutton += '<button class="btn btn-xs btn-warning" style="margin:4px" type="button" data-toggle="tooltip" onclick="ChangeStatueEnable(this);" data-id="' + data.vendorsID + '" title="' + xtitleEnable + '"><i class="' + iconEnable + '"></i></button>';

                            databutton += ` <a class="btn btn-xs btn-success" style="margin:0 5px" href="@Url.Action("Edit")/${data.vendorsGuid}" type="button" data-toggle="tooltip" title="@Homemade.UI.Resources.Homemade.Update">
                                        <i class="fa fa-edit"></i>
                                    </a>`;
                                        }

                        if (@IsPermissionDelete == 1) {
                            databutton += '<a class="btn btn-xs btn-danger" data-toggle="tooltip" title="@Homemade.UI.Resources.Homemade.Delete" style="margin:4px"' +
                                ' onclick="Delete(this)" data-id="' + data.vendorsID + '" data-toggle="tooltip" title="@Homemade.UI.Resources.Homemade.Delete"><i class="fa fa-trash"></i></a>';
                        }
                        return databutton;
                    }
                }
            ],
             buttons: [
                    @*{
                        extend: "copy",
                        className: "btn btn-info btn-xs",
                        text: '@Homemade.UI.Resources.Homemade.Copy'
                    },*@
                   {
                    text: '@Homemade.UI.Resources.Homemade.Excel',
                    className: "btn btn-success btn-xs",
                    action: function (e, dt, node, config) {
                        DownloadExcel();
                    }
                    },
                    {
                    text: '@Homemade.UI.Resources.Homemade.Print',
                    className: "btn btn-warning btn-xs",
                    extend: "print",
                },
                    {
                        extend: "pdfHtml5",
                        download: 'open',
                        className: "btn btn-info btn-xs",
                        text: '@Homemade.UI.Resources.Homemade.PDF'
                    }
                ],
                drawCallback: function (s) {
                    $('[data-toggle="tooltip"]').tooltip();
                }
                , dom: "<'row'<'col-sm-12'<'text-center bg-body-light py-2 mb-2'B>>><'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>"

        });
        table.buttons().container().appendTo('.dt_buttons_wrap');
    });
    function readtable() {
        var RegTypeselected = "";
        $("input[type='checkbox'][name='RegTypeId']:checked").each(function () {
            RegTypeselected = RegTypeselected + $(this).val() + ",";
        });
        var Statusselected = "";
        $("input[type='checkbox'][name='StatusId']:checked").each(function () {
            Statusselected = Statusselected + $(this).val() + ",";
        });
        var VacctionStatusselected = "";
        $("input[type='checkbox'][name='VacctionStatusId']:checked").each(function () {
            VacctionStatusselected = VacctionStatusselected + $(this).val() + ",";
        });
        table.ajax.url('/Vendor/Vendors/LoadTable?listRegionID=' + $("#ListRegionID").val() + '&listCityID=' + $("#ListCityID").val()
            + '&listBlockID=' + $("#ListBlockID").val()
            + '&listVendorID=' + $("#ListVendorID").val()
            + '&listNationalityID=' + $("#ListNationalityID").val()
            + '&listGenderID=' + $("#ListGenderID").val()
            + '&listRegisterTypeId=' + RegTypeselected
            + '&listIsEnabled=' + Statusselected
            + '&listIsVac=' + VacctionStatusselected
        );
        table.ajax.reload();
    }
    function zeroPadded(val) {
        if (val >= 10)
            return val;
        else
            return '0' + val;
    }
    function getFormatDate(d) {
        var d = new Date(d);
        return d.getFullYear() + "-" + zeroPadded(d.getMonth() + 1) + "-" + zeroPadded(d.getDate())/* + "  " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds()*/;
    }
    function DownloadExcel() {
        if ($("#tbl_Vendor tbody tr").length > 0 && ($("#tbl_Vendor tbody tr td").hasClass("dataTables_empty") == false)) {
                @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.ExportExcel , "ConfirmExcel();"))
            }
            else {
                @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Error , "" , false , false , false)
         { Title = "\"" + Homemade.UI.Resources.Homemade.NoDataFound + "\"" })
            }
    }
    function ConfirmExcel() {
            @await Component.InvokeAsync(typeof(SwalActionScript), new Swal(SwalActions.Success, "", false, false, false)
       {
           Title = "\"" + Homemade.UI.Resources.Homemade.Excel + "\""
       });
        var RegTypeselected = "";
        $("input[type='checkbox'][name='RegTypeId']:checked").each(function () {
            RegTypeselected = RegTypeselected + $(this).val() + ",";
        });
        var Statusselected = "";
        $("input[type='checkbox'][name='StatusId']:checked").each(function () {
            Statusselected = Statusselected + $(this).val() + ",";
        });
        var VacctionStatusselected = "";
        $("input[type='checkbox'][name='VacctionStatusId']:checked").each(function () {
            VacctionStatusselected = VacctionStatusselected + $(this).val() + ",";
        });
        window.open('/Vendor/Vendors/ExcelVendors?listRegionID=' + $("#ListRegionID").val() + '&listCityID=' + $("#ListCityID").val()
            + '&listBlockID=' + $("#ListBlockID").val()
            + '&listVendorID=' + $("#ListVendorID").val()
            + '&listNationalityID=' + $("#ListNationalityID").val()
            + '&listGenderID=' + $("#ListGenderID").val()
            + '&listRegisterTypeId=' + RegTypeselected
            + '&listIsEnabled=' + Statusselected
            + '&listIsVac=' + VacctionStatusselected, "_blank");
        }
</script>