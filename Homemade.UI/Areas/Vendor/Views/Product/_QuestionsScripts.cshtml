


<script charset="utf-8" type="text/javascript">
    $("#btnSaveQuestion").click(function() {



        let frmCreateQuestion = $("#frmCreateQuestion");
        if (frmCreateQuestion.valid()) {

    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Add , "CreateProductQuestion();"))
            }
    });



    function completed(xhr) {

        var obj = JSON.parse(xhr.responseText);
        var result = obj.result;


        var msg = result.message;
        if (result.resultType == 'success') {

    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Success , "" , false , false , false)
                { Title = "\"" + Homemade.UI.Resources.Homemade.SuccessSaveMessage + "\"" })

                    if (obj.operationType == 'update') {
                $("#modal").modal('hide');
            }
            else {
                $("#frmCreateQuestion").trigger('reset');

            }
            readtableFiles($("#ProductID").val());


        }
        else {
    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Error , "" , false , false , false) { Title = "msg" })
            }
    };


    function DeleteQuestion(e) {
    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Delete , "ConfirmDeleteQuestion(e)"))
        }

    function ConfirmDeleteQuestion(e) {
        var button = $(e);
        var id = button.attr("data-id");
        $.ajax({
            type: "POST",
            url: '@Url.Action("DeleteQuestions")',
            data: {
                'id': id
            },
            dataType: "json",
            async: false,

            contentType: "application/x-www-form-urlencoded",
            success: function(result) {
                var msg = result.message;

                if (result.resultType == 'success') {
    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Success , "" , false , false , false) {
                        Title = "\"" + Homemade.UI.Resources.Homemade.SuccessDeleteMessage + "\""})
                        readtableFiles($("#ProductID").val());
                }
                else {
    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Error , "" , false , false , false) { Title = "msg" })
                    }
            }
        });
    }

    function ShowModal(e) {
        if (e == undefined) {
            $('#title').html('@Homemade.UI.Resources.Homemade.Add')
        }
        else
            $('#title').html('@Homemade.UI.Resources.Homemade.Update');

        let fields = $('#frmCreateQuestion span');
        fields.each(function() {
            if ($(this).attr('data-valmsg-for') != null) {
                $($(this).children()[0]).text('');
            }
        });
        var button = $(e);
        var tr = $(button.closest('tr'));

        var id = button.attr("data-id");
        $("#ProductQuestionID").val(id);

        $("#AnswerAr").val(button.attr("data-answerAr"));
        $("#AnswerEn").val(button.attr("data-answerEn"));
        $("#QuestionAr").val(button.attr("data-questionAr"));
        $("#QuestionEn").val(button.attr("data-questionEn"));
        $('#modal').modal('show');
    }
    function Edit() {
        var ProductQuestionID = $("#ProductQuestionID").val();
    }
    function CreateProductQuestion() {
        var fdata = new FormData();
        fdata.append("ProductID", $("#ProductID").val());
        fdata.append("ProductQuestionID", $("#ProductQuestionID").val());
        fdata.append("AnswerAr", $("#AnswerAr").val());
        fdata.append("AnswerEn", $("#AnswerEn").val());
        fdata.append("QuestionAr", $("#QuestionAr").val());
        fdata.append("QuestionEn", $("#QuestionEn").val());

        $.ajax({
            type: "POST",
            url: '@Url.Action("CreateProductQuestion")',
            data: fdata,
            dataType: "json",
            async: false,
            processData: false,
            contentType: false,
            success: function(result) {
                var msg = result.result.message;
                if (result.result.resultType == 'success') {

    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Success , "" , false , false , false)
                        { Title = "\"" + Homemade.UI.Resources.Homemade.SuccessSaveMessage + "\"" })

                if (result.operationType == 'update') {
                        $("#modal").modal('hide');
                    }
                    else {
                        $("#frmCreateQuestion").trigger('reset');

                    }
                    readtableFiles($("#ProductID").val());


                }
                else {
    @await Component.InvokeAsync(typeof(SwalActionScript) , new Swal(SwalActions.Error , "" , false , false , false) { Title = "msg" })
            }

            }
        });
    }
</script>

