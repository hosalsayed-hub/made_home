<script>

    var css = "text-shadow: -1px -1px hsl(0,100%,50%), 1px 1px hsl(5.4, 100%, 50%), 3px 2px hsl(10.8, 100%, 50%), 5px 3px hsl(16.2, 100%, 50%), 7px 4px hsl(21.6, 100%, 50%), 9px 5px hsl(27, 100%, 50%), 11px 6px hsl(32.4, 100%, 50%), 13px 7px hsl(37.8, 100%, 50%), 14px 8px hsl(43.2, 100%, 50%), 16px 9px hsl(48.6, 100%, 50%), 18px 10px hsl(54, 100%, 50%), 20px 11px hsl(59.4, 100%, 50%), 22px 12px hsl(64.8, 100%, 50%), 23px 13px hsl(70.2, 100%, 50%), 25px 14px hsl(75.6, 100%, 50%), 27px 15px hsl(81, 100%, 50%), 28px 16px hsl(86.4, 100%, 50%), 30px 17px hsl(91.8, 100%, 50%), 32px 18px hsl(97.2, 100%, 50%), 33px 19px hsl(102.6, 100%, 50%), 35px 20px hsl(108, 100%, 50%), 36px 21px hsl(113.4, 100%, 50%), 38px 22px hsl(118.8, 100%, 50%), 39px 23px hsl(124.2, 100%, 50%), 41px 24px hsl(129.6, 100%, 50%), 42px 25px hsl(135, 100%, 50%), 43px 26px hsl(140.4, 100%, 50%), 45px 27px hsl(145.8, 100%, 50%), 46px 28px hsl(151.2, 100%, 50%), 47px 29px hsl(156.6, 100%, 50%), 48px 30px hsl(162, 100%, 50%), 49px 31px hsl(167.4, 100%, 50%), 50px 32px hsl(172.8, 100%, 50%), 51px 33px hsl(178.2, 100%, 50%), 52px 34px hsl(183.6, 100%, 50%), 53px 35px hsl(189, 100%, 50%), 54px 36px hsl(194.4, 100%, 50%), 55px 37px hsl(199.8, 100%, 50%), 55px 38px hsl(205.2, 100%, 50%), 56px 39px hsl(210.6, 100%, 50%), 57px 40px hsl(216, 100%, 50%), 57px 41px hsl(221.4, 100%, 50%), 58px 42px hsl(226.8, 100%, 50%), 58px 43px hsl(232.2, 100%, 50%), 58px 44px hsl(237.6, 100%, 50%), 59px 45px hsl(243, 100%, 50%), 59px 46px hsl(248.4, 100%, 50%), 59px 47px hsl(253.8, 100%, 50%), 59px 48px hsl(259.2, 100%, 50%), 59px 49px hsl(264.6, 100%, 50%), 60px 50px hsl(270, 100%, 50%), 59px 51px hsl(275.4, 100%, 50%), 59px 52px hsl(280.8, 100%, 50%), 59px 53px hsl(286.2, 100%, 50%), 59px 54px hsl(291.6, 100%, 50%), 59px 55px hsl(297, 100%, 50%), 58px 56px hsl(302.4, 100%, 50%), 58px 57px hsl(307.8, 100%, 50%), 58px 58px hsl(313.2, 100%, 50%), 57px 59px hsl(318.6, 100%, 50%), 57px 60px hsl(324, 100%, 50%), 56px 61px hsl(329.4, 100%, 50%), 55px 62px hsl(334.8, 100%, 50%), 55px 63px hsl(340.2, 100%, 50%), 54px 64px hsl(345.6, 100%, 50%), 53px 65px hsl(351, 100%, 50%), 52px 66px hsl(356.4, 100%, 50%), 51px 67px hsl(361.8, 100%, 50%), 50px 68px hsl(367.2, 100%, 50%), 49px 69px hsl(372.6, 100%, 50%), 48px 70px hsl(HomemadesUIUIticsogisticsisticsiReceivereiveeiverstics78, 100%, 50%), 47px 71px hsl(383.4, 100%, 50%), 46px 72px hsl(388.8, 100%, 50%), 45px 73px hsl(394.2, 100%, 50%), 43px 74px hsl(399.6, 100%, 50%), 42px 75px hsl(405, 100%, 50%), 41px 76px hsl(410.4, 100%, 50%), 39pMobileNumberx 77px hsl(415.8, 100%, 50%), 38px 78px hsl(421.2, 100%, 50%), 36px 79px hsl(426.6, 100%, 50%), 35px 80px hsl(432, 100%, 50%), 33px 81px hsl(437.4, 100%, 50%), 32px 82px hsl(442.8, 100%, 50%), 30px 83px hsl(448.2, 100%, 50%), 28px 84px hsl(453.6, 100%, 50%), 27px 85px hsl(459, 100%, 50%), 25px 86px hsl(464.4, 100%, 50%), 23px 87px hsl(469.8, 100%, 50%), 22px 88px hsl(475.2, 100%, 50%), 20px 89px hsl(480.6, 100%, 50%), 18px 90px hsl(486, 100%, 50%), 16px 91px hsl(491.4, 100%, 50%), 14px 92px hsl(496.8, 100%, 50%), 13px 93px hsl(502.2, 100%, 50%), 11px 94px hsl(507.6, 100%, 50%), 9px 95px hsl(513, 100%, 50%), 7px 96px hsl(518.4, 100%, 50%), 5px 97px hsl(523.8, 100%, 50%), 3px 98px hsl(529.2, 100%, 50%), 1px 99px hsl(534.6, 100%, 50%), 7px 100px hsl(540, 100%, 50%), -1px 101px hsl(545.4, 100%, 50%), -3px 102px hsl(550.8, 100%, 50%), -5px 103px hsl(556.2, 100%, 50%), -7px 104px hsl(561.6, 100%, 50%), -9px 105px hsl(567, 100%, 50%), -11px 106px hsl(572.4, 100%, 50%), -13px 107px hsl(577.8, 100%, 50%), -14px 108px hsl(583.2, 100%, 50%), -16px 109px hsl(588.6, 100%, 50%), -18px 110px hsl(594, 100%, 50%), -20px 111px hsl(599.4, 100%, 50%), -22px 112px hsl(604.8, 100%, 50%), -23px 113px hsl(610.2, 100%, 50%), -25px 114px hsl(615.6, 100%, 50%), -27px 115px hsl(621, 100%, 50%), -28px 116px hsl(626.4, 100%, 50%), -30px 117px hsl(631.8, 100%, 50%), -32px 118px hsl(637.2, 100%, 50%), -33px 119px hsl(642.6, 100%, 50%), -35px 120px hsl(648, 100%, 50%), -36px 121px hsl(653.4, 100%, 50%), -38px 122px hsl(658.8, 100%, 50%), -39px 123px hsl(664.2, 100%, 50%), -41px 124px hsl(669.6, 100%, 50%), -42px 125px hsl(675, 100%, 50%), -43px 126px hsl(680.4, 100%, 50%), -45px 127px hsl(685.8, 100%, 50%), -46px 128px hsl(691.2, 100%, 50%), -47px 129px hsl(696.6, 100%, 50%), -48px 130px hsl(702, 100%, 50%), -49px 131px hsl(707.4, 100%, 50%), -50px 132px hsl(712.8, 100%, 50%), -51px 133px hsl(718.2, 100%, 50%), -52px 134px hsl(723.6, 100%, 50%), -53px 135px hsl(729, 100%, 50%), -54px 136px hsl(734.4, 100%, 50%), -55px 137px hsl(739.8, 100%, 50%), -55px 138px hsl(745.2, 100%, 50%), -56px 139px hsl(750.6, 100%, 50%), -57px 140px hsl(756, 100%, 50%), -57px 141px hsl(761.4, 100%, 50%), -58px 142px hsl(766.8, 100%, 50%), -58px 143px hsl(772.2, 100%, 50%), -58px 144px hsl(777.6, 100%, 50%), -59px 145px hsl(783, 100%, 50%), -59px 146px hsl(788.4, 100%, 50%), -59px 147px hsl(793.8, 100%, 50%), -59px 148px hsl(799.2, 100%, 50%), -59px 149px hsl(804.6, 100%, 50%), -60px 150px hsl(810, 100%, 50%), -59px 151px hsl(815.4, 100%, 50%), -59px 152px hsl(820.8, 100%, 50%), -59px 153px hsl(826.2, 100%, 50%), -59px 154px hsl(831.6, 100%, 50%), -59px 155px hsl(837, 100%, 50%), -58px 156px hsl(842.4, 100%, 50%), -58px 157px hsl(847.8, 100%, 50%), -58px 158px hsl(853.2, 100%, 50%), -57px 159px hsl(858.6, 100%, 50%), -57px 160px hsl(864, 100%, 50%), -56px 161px hsl(869.4, 100%, 50%), -55px 162px hsl(874.8, 100%, 50%), -55px 163px hsl(880.2, 100%, 50%), -54px 164px hsl(885.6, 100%, 50%), -53px 165px hsl(891, 100%, 50%), -52px 166px hsl(896.4, 100%, 50%), -51px 167px hsl(901.8, 100%, 50%), -50px 168px hsl(907.2, 100%, 50%), -49px 169px hsl(912.6, 100%, 50%), -48px 170px hsl(918, 100%, 50%), -47px 171px hsl(923.4, 100%, 50%), -46px 172px hsl(928.8, 100%, 50%), -45px 173px hsl(934.2, 100%, 50%), -43px 174px hsl(939.6, 100%, 50%), -42px 175px hsl(945, 100%, 50%), -41px 176px hsl(950.4, 100%, 50%), -39px 177px hsl(955.8, 100%, 50%), -38px 178px hsl(961.2, 100%, 50%), -36px 179px hsl(966.6, 100%, 50%), -35px 180px hsl(972, 100%, 50%), -33px 181px hsl(977.4, 100%, 50%), -32px 182px hsl(982.8, 100%, 50%), -30px 183px hsl(988.2, 100%, 50%), -28px 184px hsl(993.6, 100%, 50%), -27px 185px hsl(999, 100%, 50%), -25px 186px hsl(1004.4, 100%, 50%), -23px 187px hsl(1009.8, 100%, 50%), -22px 188px hsl(1015.2, 100%, 50%), -20px 189px hsl(1020.6, 100%, 50%), -18px 190px hsl(1026, 100%, 50%), -16px 191px hsl(1031.4, 100%, 50%), -14px 192px hsl(1036.8, 100%, 50%), -13px 193px hsl(1042.2, 100%, 50%), -11px 194px hsl(1047.6, 100%, 50%), -9px 195px hsl(1053, 100%, 50%), -7px 196px hsl(1058.4, 100%, 50%), -5px 197px hsl(1063.8, 100%, 50%), -3px 198px hsl(1069.2, 100%, 50%), -1px 199px hsl(1074.6, 100%, 50%), -1px 200px hsl(1080, 100%, 50%), 1px 201px hsl(1085.4, 100%, 50%), 3px 202px hsl(PaidToClientientientClient090.8, 100%, 50%), 5px 203px hsl(1096.2, 100%, 50%), 7px 204px hsl(1101.6, 100%, 50%), 9px 205px hsl(1107, 100%, 50%), 11px 206px hsl(1112.4, 100%, 50%), 13px 207px hsl(1117.8, 100%, 50%), 14px 208px hsl(1123.2, 100%, 50%), 16px 209pReceiverCollected hsl(1128.6, 100%, 50%), 18px 210px hsl(1134, 100%, 50%), 20px 211px hsl(1139.4, 100%, 50%), 22px 212px hsl(1144.8, 100%, 50%), 23px 213px hsl(1150.2, 100%, 50%), 25px 214px hsl(1155.6, 100%, 50%), 27px 215px hsl(1161, 100%, 50%), 28px 216px hsl(1166.4, 100%, 50%), 30px 217px hsl(1171.8, 100%, 50%), 32px 218px hsl(1177.2, 100%, 50%), 33px 219px hsl(1182.6, 100%, 50%), 35px 220px hsl(1188, 100%, 50%), 36px 221px hsl(1193.4, 100%, 50%), 38px 222px hsl(1198.8, 100%, 50%), 39px 223px hsl(1204.2, 100%, 50%), 41px 224px hsl(1209.6, 100%, 50%), 42px 225px hsl(1215, 100%, 50%), 43px 226px hsl(1220.4, 100%, 50%), 45px 227px hsl(1225.8, 100%, 50%), 46px 228px hsl(1231.2, 100%, 50%), 47px 229px hsl(1236.6, 100%, 50%), 48px 230px hsl(1242, 100%, 50%), 49px 231px hsl(1247.4, 100%, 50%), 50px 232px hsl(1252.8, 100%, 50%), 51px 233px hsl(1258.2, 100%, 50%), 52px 234px hsl(1263.6, 100%, 50%), 53px 235px hsl(1269, 100%, 50%), 54px 236px hsl(1274.4, 100%, 50%), 55px 237px hsl(1279.8, 100%, 50%), 55px 238px hsl(1285.2, 100%, 50%), 56px 239px hsl(1290.6, 100%, 50%), 57px 240px hsl(1296, 100%, 50%), 57px 241px hsl(1301.4, 100%, 50%), 58px 242px hsl(1306.8, 100%, 50%), 58px 243px hsl(1312.2, 100%, 50%), 58px 244px hsl(1317.6, 100%, 50%), 59px 245px hsl(1323, 100%, 50%), 59px 246px hsl(1328.4, 100%, 50%), 59px 247px hsl(1333.8, 100%, 50%), 59px 248px hsl(1339.2, 100%, 50%), 59px 249px hsl(1344.6, 100%, 50%), 60px 250px hsl(1350, 100%, 50%), 59px 251px hsl(1355.4, 100%, 50%), 59px 252px hsl(1360.8, 100%, 50%), 59px 253px hsl(1366.2, 100%, 50%), 59px 254px hsl(1371.6, 100%, 50%), 59px 255px hsl(1377, 100%, 50%), 58px 256px hsl(1382.4, 100%, 50%), 58px 257px hsl(1387.8, 100%, 50%), 58px 258px hsl(1393.2, 100%, 50%), 57px 259px hsl(1398.6, 100%, 50%), 57px 260px hsl(1404, 100%, 50%), 56px 261px hsl(1409.4, 100%, 50%), 55px 262px hsl(1414.8, 100%, 50%), 55px 263px hsl(1420.2, 100%, 50%), 54px 264px hsl(1425.6, 100%, 50%), 53px 265px hsl(1431, 100%, 50%), 52px 266px hsl(1436.4, 100%, 50%), 51px 267px hsl(1441.8, 100%, 50%), 50px 268px hsl(1447.2, 100%, 50%), 49px 269px hsl(1452.6, 100%, 50%), 48px 270px hsl(1458, 100%, 50%), 47px 271px hsl(1463.4, 100%, 50%), 46px 272px hsl(1468.8, 100%, 50%), 45px 273px hsl(1474.2, 100%, 50%), 43px 274px hsl(1479.6, 100%, 50%), 42px 275px hsl(1485, 100%, 50%), 41px 276px hsl(1490.4, 100%, 50%), 39px 277px hsl(1495.8, 100%, 50%), 38px 278px hsl(1501.2, 100%, 50%), 36px 279px hsl(1506.6, 100%, 50%), 35px 280px hsl(1512, 100%, 50%), 33px 281px hsl(1517.4, 100%, 50%), 32px 282px hsl(1522.8, 100%, 50%), 30px 283px hsl(1528.2, 100%, 50%), 28px 284px hsl(1533.6, 100%, 50%), 27px 285px hsl(1539, 100%, 50%), 25px 286px hsl(1544.4, 100%, 50%), 23px 287px hsl(1549.8, 100%, 50%), 22px 288px hsl(1555.2, 100%, 50%), 20px 289px hsl(1560.6, 100%, 50%), 18px 290px hsl(1566, 100%, 50%), 16px 291px hsl(1571.4, 100%, 50%), 14px 292px hsl(1576.8, 100%, 50%), 13px 293px hsl(1582.2, 100%, 50%), 11px 294px hsl(1587.6, 100%, 50%), 9px 295px hsl(1593, 100%, 50%), 7px 296px hsl(1598.4, 100%, 50%), 5px 297px hsl(1603.8, 100%, 50%), 3px 298px hsl(1609.2, 100%, 50%), 1px 299px hsl(1614.6, 100%, 50%), 2px 300px hsl(1620, 100%, 50%), -1px 301px hsl(1625.4, 100%, 50%), -3px 302px hsl(1630.8, 100%, 50%), -5px 303px hsl(1636.2, 100%, 50%), -7px 304px hsl(1641.6, 100%, 50%), -9px 305px hsl(1647, 100%, 50%), -11px 306px hsl(1652.4, 100%, 50%), -13px 307px hsl(1657.8, 100%, 50%), -14px 308px hsl(1663.2, 100%, 50%), -16px 309px hsl(1668.6, 100%, 50%), -18px 310px hsl(1674, 100%, 50%), -20px 311px hsl(1679.4, 100%, 50%), -22px 312px hsl(1684.8, 100%, 50%), -23px 313px hsl(1690.2, 100%, 50%), -25px 314px hsl(1695.6, 100%, 50%), -27px 315px hsl(1701, 100%, 50%), -28px 316px hsl(1706.4, 100%, 50%), -30px 317px hsl(1711.8, 100%, 50%), -32px 318px hsl(1717.2, 100%, 50%), -33px 319px hsl(1722.6, 100%, 50%), -35px 320px hsl(1728, 100%, 50%), -36px 321px hsl(1733.4, 100%, 50%), -38px 322px hsl(1738.8, 100%, 50%), -39px 323px hsl(1744.2, 100%, 50%), -41px 324px hsl(1749.6, 100%, 50%), -42px 325px hsl(1755, 100%, 50%), -43px 326px hsl(1760.4, 100%, 50%), -45px 327px hsl(1765.8, 100%, 50%), -46px 328px hsl(1771.2, 100%, 50%), -47px 329px hsl(1776.6, 100%, 50%), -48px 330px hsl(1782, 100%, 50%), -49px 331px hsl(1787.4, 100%, 50%), -50px 332px hsl(1792.8, 100%, 50%), -51px 333px hsl(1798.2, 100%, 50%), -52px 334px hsl(1803.6, 100%, 50%), -53px 335px hsl(1809, 100%, 50%), -54px 336px hsl(1814.4, 100%, 50%), -55px 337px hsl(1819.8, 100%, 50%), -55px 338px hsl(1825.2, 100%, 50%), -56px 339px hsl(1830.6, 100%, 50%), -57px 340px hsl(1836, 100%, 50%), -57px 341px hsl(1841.4, 100%, 50%), -58px 342px hsl(1846.8, 100%, 50%), -58px 343px hsl(1852.2, 100%, 50%), -58px 344px hsl(1857.6, 100%, 50%), -59px 345px hsl(1863, 100%, 50%), -59px 346px hsl(1868.4, 100%, 50%), -59px 347px hsl(1873.8, 100%, 50%), -59px 348px hsl(1879.2, 100%, 50%), -59px 349px hsl(1884.6, 100%, 50%), -60px 350px hsl(1890, 100%, 50%), -59px 351px hsl(1895.4, 100%, 50%), -59px 352px hsl(1900.8, 100%, 50%), -59px 353px hsl(1906.2, 100%, 50%), -59px 354px hsl(1911.6, 100%, 50%), -59px 355px hsl(1917, 100%, 50%), -58px 356px hsl(1922.4, 100%, 50%), -58px 357px hsl(1927.8, 100%, 50%), -58px 358px hsl(1933.2, 100%, 50%), -57px 359px hsl(1938.6, 100%, 50%), -57px 360px hsl(1944, 100%, 50%), -56px 361px hsl(1949.4, 100%, 50%), -55px 362px hsl(1954.8, 100%, 50%), -55px 363px hsl(1960.2, 100%, 50%), -54px 364px hsl(1965.6, 100%, 50%), -53px 365px hsl(1971, 100%, 50%), -52px 366px hsl(1976.4, 100%, 50%), -51px 367px hsl(1981.8, 100%, 50%), -50px 368px hsl(1987.2, 100%, 50%), -49px 369px hsl(1992.6, 100%, 50%), -48px 370px hsl(1998, 100%, 50%), -47px 371px hsl(2003.4, 100%, 50%), -46px 372px hsl(2008.8, 100%, 50%), -45px 373px hsl(2014.2, 100%, 50%), -43px 374px hsl(2019.6, 100%, 50%), -42px 375px hsl(2025, 100%, 50%), -41px 376px hsl(2030.4, 100%, 50%), -39px 377px hsl(2035.8, 100%, 50%), -38px 378px hsl(2041.2, 100%, 50%), -36px 379px hsl(2046.6, 100%, 50%), -35px 380px hsl(2052, 100%, 50%), -33px 381px hsl(2057.4, 100%, 50%), -32px 382px hsl(2062.8, 100%, 50%), -30px 383px hsl(2068.2, 100%, 50%), -28px 384px hsl(2073.6, 100%, 50%), -27px 385px hsl(2079, 100%, 50%), -25px 386px hsl(2084.4, 100%, 50%), -23px 387px hsl(2089.8, 100%, 50%), -22px 388px hsl(2095.2, 100%, 50%), -20px 389px hsl(2100.6, 100%, 50%), -18px 390px hsl(2106, 100%, 50%), -16px 391px hsl(2111.4, 100%, 50%), -14px 392px hsl(2116.8, 100%, 50%), -13px 393px hsl(2122.2, 100%, 50%), -11px 394px hsl(2127.6, 100%, 50%), -9px 395px hsl(2133, 100%, 50%), -7px 396px hsl(2138.4, 100%, 50%), -5px 397px hsl(2143.8, 100%, 50%), -3px 398px hsl(2149.2, 100%, 50%), -1px 399px hsl(2154.6, 100%, 50%); font-size: 40px;";

   


    function ConsoleLog(Message) {
        var date = new Date().toISOString().
            replace(/T/, ' ').      // replace T with a space
            replace(/\..+/, '')     // delete the dot and everything after
        console.log(date + " ==> " + Message);
    }
    function ConsoleLog_Info(Message) {
        var date = new Date().toISOString().
            replace(/T/, ' ').      // replace T with a space
            replace(/\..+/, '')     // delete the dot and everything after
        
        console.log('⚠️ : '+'%c ' +date + ' ==> ' + Message + '! ', 'background: #222; color: #FFEB3B;font-size:10pt');
    }
    function ConsoleLog_Success(Message) {
        var date = new Date().toISOString().
            replace(/T/, ' ').      // replace T with a space
            replace(/\..+/, '')     // delete the dot and everything after
        
        console.log('🟢 : '+'%c ' + date + ' ==> ' +  Message + '! ', 'background: #222; color: #89ff00;font-size:10pt');
    }
    function ConsoleLog_Error(Message) {
        var date = new Date().toISOString().
            replace(/T/, ' ').      // replace T with a space
            replace(/\..+/, '')     // delete the dot and everything after
        
        console.log('🛑 : '+'%c ' +date + ' ==> ' + Message + '! ', 'background: #222; color: #f30202;font-size:10pt');
    }
   
    function ConsoleLog_Object(Message) {
        console.log(Message);
    }
    function OpenNotificationandSeen(notId, tripguid, type) {
        //debugger
        $.ajax({
            type: "POST",
            url: '/Home/SeenNotifictions',
            data: { 'notId': notId },
            dataType: "json",
            contentType: "application/x-www-form-urlencoded",
            success: function (result) {
                if (result.resultType == 'success') {
                    if (type === 6) {
                        window.location.href = "/Pickup/AssignDriver/Index";
                    } else {
                        window.location.href = "/Trip/TripDetails/Index/" + tripguid;
                    }
                }
            },
            error: function () {

            }
        });
    }
</script>

<script>


    var labelsName = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];
    var trips_TripsNum = [0, 0, 0, 0, 0, 0, 0];
    var trips_Delivered = [0, 0, 0, 0, 0, 0, 0];
    var trips_Canceled = [0, 0, 0, 0, 0, 0, 0];

    var finances_debtClient        = [0, 0, 0, 0, 0, 0, 0];
    var finances_paidToClient      = [0, 0, 0, 0, 0, 0, 0];
    var finances_receiverCollected = [0, 0, 0, 0, 0, 0, 0];






    var map;
    var markers = [];
    var infowindow;
    var activeInfoWindow;

    var icons = {
        available: {
            icon: 'M118.924,0A88.621,88.621,0,0,0,84.153,7.1L53.821,20.1A87.85,87.85,0,0,0,.636,108.178l12.358,147.86L.3,407.737a87.833,87.833,0,0,0,48.5,85.945l6.965,3.469a141.724,141.724,0,0,0,126.321,0l6.965-3.469a87.841,87.841,0,0,0,48.5-85.945l-12.694-151.7,12.358-147.824a87.857,87.857,0,0,0-53.185-88.16L153.695,7.1A88.621,88.621,0,0,0,118.924,0ZM54.805,111.865l-14.692-9.794L75.424,49.1,90.116,58.9Zm130.214.017L149.709,58.912,164.4,49.118l35.311,52.97ZM40.5,191.151c-.655-6.533,2.335-22.844,7.8-26.472l2.226-1.474a123.569,123.569,0,0,1,136.754,0l2.26,1.474c5.468,3.628,8.458,19.939,7.8,26.472l-7.8,62.337H48.3c-4.912-15.863-4.379-20.809-4.884-27.848C42.76,216.465,42.233,211.7,40.5,191.151Zm78.414,252.668a106.165,106.165,0,0,1-51.446-13.333l-17.116-9.507a17.657,17.657,0,0,1-8.827-18.337L48.3,371.966h141.24l6.761,30.676a17.694,17.694,0,0,1-8.827,18.336l-17.116,9.507A106.165,106.165,0,0,1,118.915,443.819Z',
            fillColor: "#46c37b",
            strokeColor: "#313131",
        },
        notavailable: {
            icon: 'M118.924,0A88.621,88.621,0,0,0,84.153,7.1L53.821,20.1A87.85,87.85,0,0,0,.636,108.178l12.358,147.86L.3,407.737a87.833,87.833,0,0,0,48.5,85.945l6.965,3.469a141.724,141.724,0,0,0,126.321,0l6.965-3.469a87.841,87.841,0,0,0,48.5-85.945l-12.694-151.7,12.358-147.824a87.857,87.857,0,0,0-53.185-88.16L153.695,7.1A88.621,88.621,0,0,0,118.924,0ZM54.805,111.865l-14.692-9.794L75.424,49.1,90.116,58.9Zm130.214.017L149.709,58.912,164.4,49.118l35.311,52.97ZM40.5,191.151c-.655-6.533,2.335-22.844,7.8-26.472l2.226-1.474a123.569,123.569,0,0,1,136.754,0l2.26,1.474c5.468,3.628,8.458,19.939,7.8,26.472l-7.8,62.337H48.3c-4.912-15.863-4.379-20.809-4.884-27.848C42.76,216.465,42.233,211.7,40.5,191.151Zm78.414,252.668a106.165,106.165,0,0,1-51.446-13.333l-17.116-9.507a17.657,17.657,0,0,1-8.827-18.337L48.3,371.966h141.24l6.761,30.676a17.694,17.694,0,0,1-8.827,18.336l-17.116,9.507A106.165,106.165,0,0,1,118.915,443.819Z',
            fillColor: "#D26A5C",
            strokeColor: "#313131",
        },
        busy: {
            icon: 'M118.924,0A88.621,88.621,0,0,0,84.153,7.1L53.821,20.1A87.85,87.85,0,0,0,.636,108.178l12.358,147.86L.3,407.737a87.833,87.833,0,0,0,48.5,85.945l6.965,3.469a141.724,141.724,0,0,0,126.321,0l6.965-3.469a87.841,87.841,0,0,0,48.5-85.945l-12.694-151.7,12.358-147.824a87.857,87.857,0,0,0-53.185-88.16L153.695,7.1A88.621,88.621,0,0,0,118.924,0ZM54.805,111.865l-14.692-9.794L75.424,49.1,90.116,58.9Zm130.214.017L149.709,58.912,164.4,49.118l35.311,52.97ZM40.5,191.151c-.655-6.533,2.335-22.844,7.8-26.472l2.226-1.474a123.569,123.569,0,0,1,136.754,0l2.26,1.474c5.468,3.628,8.458,19.939,7.8,26.472l-7.8,62.337H48.3c-4.912-15.863-4.379-20.809-4.884-27.848C42.76,216.465,42.233,211.7,40.5,191.151Zm78.414,252.668a106.165,106.165,0,0,1-51.446-13.333l-17.116-9.507a17.657,17.657,0,0,1-8.827-18.337L48.3,371.966h141.24l6.761,30.676a17.694,17.694,0,0,1-8.827,18.336l-17.116,9.507A106.165,106.165,0,0,1,118.915,443.819Z',
            fillColor: "#FBBC39",
            strokeColor: "#313131",
        }
    };

    function loadMap() {
        setTimeout(function () {
            $("#Div_Loading").css("display", "block");

            initMap();
            changeBtnPostion();
            $("#Div_Loading").css("display", "none");

        }, 2000);
    }

    //Map Script
    function initMap() {
        //var riyadh = { lat: 30.044367093804816, lng: 31.23571798231443 };



        var riyadh = { lat: parseFloat($("#OperationLat").val()), lng: parseFloat($("#OperationLang").val()) };
        var mapStyle = [{
            "featureType": "administrative",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#d6e2e6"
                }
            ]
        },
        {
            "featureType": "administrative",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#cfd4d5"
                }
            ]
        },
        {
            "featureType": "administrative",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#7492a8"
                }
            ]
        },
        {
            "featureType": "administrative.neighborhood",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "lightness": 25
                }
            ]
        },
        {
            "featureType": "landscape.man_made",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#dde2e3"
                }
            ]
        },
        {
            "featureType": "landscape.man_made",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#cfd4d5"
                }
            ]
        },
        {
            "featureType": "landscape.natural",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#dde2e3"
                }
            ]
        },
        {
            "featureType": "landscape.natural",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#7492a8"
                }
            ]
        },
        {
            "featureType": "landscape.natural.terrain",
            "stylers": [
                {
                    "visibility": "off"
                }
            ]
        },
        {
            "featureType": "poi",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#dde2e3"
                }
            ]
        },
        {
            "featureType": "poi",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "saturation": -100
                }
            ]
        },
        {
            "featureType": "poi",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#588ca4"
                }
            ]
        },
        {
            "featureType": "poi.park",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#a9de83"
                }
            ]
        },
        {
            "featureType": "poi.park",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#bae6a1"
                }
            ]
        },
        {
            "featureType": "poi.sports_complex",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#c6e8b3"
                }
            ]
        },
        {
            "featureType": "poi.sports_complex",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#bae6a1"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "saturation": -45
                },
                {
                    "lightness": 10
                },
                {
                    "visibility": "on"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#41626b"
                }
            ]
        },
        {
            "featureType": "road.arterial",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#ffffff"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#c1d1d6"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#a6b5bb"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "visibility": "on"
                }
            ]
        },
        {
            "featureType": "road.highway.controlled_access",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#9fb6bd"
                }
            ]
        },
        {
            "featureType": "road.local",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#ffffff"
                }
            ]
        },
        {
            "featureType": "transit",
            "elementType": "labels.icon",
            "stylers": [
                {
                    "saturation": -70
                }
            ]
        },
        {
            "featureType": "transit.line",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#b4cbd4"
                }
            ]
        },
        {
            "featureType": "transit.line",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#588ca4"
                }
            ]
        },
        {
            "featureType": "transit.station",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#008cb5"
                }
            ]
        },
        {
            "featureType": "transit.station.airport",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "saturation": -100
                },
                {
                    "lightness": -5
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "geometry.fill",
            "stylers": [
                {
                    "color": "#a6cbe3"
                }
            ]
        }
        ]

        var directionsService = new google.maps.DirectionsService();
        map = new google.maps.Map(document.getElementById('map'),
            {
                zoom: 12,
                center: riyadh,
                styles: mapStyle,
                disableDefaultUI: true,
                fullscreenControl: true,
                zoomControl: true,
                scaleControl: false,
            });


        const input = document.getElementById("pac-input");
        const autocomplete = new google.maps.places.Autocomplete(input);
        // Bind the map's bounds (viewport) property to the autocomplete object,
        // so that the autocomplete requests use the current map bounds for the
        // bounds option in the request.
        autocomplete.bindTo("bounds", map);

        // Set the data fields to return when the user selects a place.
        autocomplete.setFields(["address_components", "geometry", "icon", "name"]);
        //  const infowindow = new google.maps.InfoWindow();
        // const infowindowContent = document.getElementById("infowindow-content");
        // infowindow.setContent(infowindowContent);
        //const marker = new google.maps.Marker({
        //    map,
        //    anchorPoint: new google.maps.Point(0, -29),
        //});
        autocomplete.addListener("place_changed", () => {
            infowindow.close();
            // marker.setVisible(false);
            const place = autocomplete.getPlace();

            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
                map.setCenter(place.geometry.location);
                map.setZoom(15); // Why 17? Because it looks good.
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(15); // Why 17? Because it looks good.
            }


            //setTimeout(function () {
            //    SearchthisArea();
            //}, 1000);
        });






        map.addListener("dragend", () => {
            // 3 seconds after the center of the map has changed, pan back to the
            // marker.

            window.setTimeout(() => {
                $("#area_search").show();
            }, 1000);

        });

        map.addListener("zoom_changed", () => {
            window.setTimeout(() => {
                $("#area_search").show();
            }, 1000);
        });
        map.addListener('click', function (e) {
           // alert(e.latLng)
            infowindow.close();

        });

        setTimeout(function () {
            SearchthisArea();
        }, 5000);

    }
    function getorderStstusName(statusid, lang) {
        switch (statusid) {
            case 1:
                return lang == "en" ? "Created" : "تم الإنشاء";
                break;

            case 2:
                return lang == "en" ? "NotFound" : "غير مقبول";
                break;
            case 3:
                return lang == "en" ? "Accept" : "تم القبول";
                break;
            case 4:
                return lang == "en" ? "Received" : "تم الأستلام";
                break;
            case 5:
                return lang == "en" ? "Finish" : "تم التسليم";
                break;
            case 6:
                return lang == "en" ? "Cancel" : "تم الإلغاء";
                break;
            case 7:
                return lang == "en" ? "Location Confirmed" : "تعديل العنوان";
                break;

            default:
        }
    }
    // push marker on map if not added on map
    // useing in first time
    function addMarker(locations) {
        ////debugger;
        for (var i = 0; i < locations.length; i++) {
            // generate info window
            var tripdata = "";
            if (locations[i].drivers.isBusy == true) { //${locations[i].drivers.orders[0].master.}
                debugger;
                if (locations[i].drivers.orders.length > 0) {
                    for (var ix = 0; ix < locations[i].drivers.orders.length; ix++) {
                    tripdata += `<div class="pas-wrap">
                              <div class="pas-info">
                                  <h5>@Homemade.UI.Resources.Homemade.Receiver :  ${locations[i].drivers.orders[ix].master.receiverName} </h5>
                                  <p>@Homemade.UI.Resources.Homemade.MobileNumber :  ${locations[i].drivers.orders[ix].master.receiverMobile} </p>
                              </div>
                             </div>
                        <div class="trip-wrap">
                            <h5>@Homemade.UI.Resources.Homemade.TripNo : ${locations[i].drivers.orders[ix].master.orderId}</h5>
                            <p>@Homemade.UI.Resources.Homemade.TripStatus : ${getorderStstusName(locations[i].drivers.orders[ix].master.statusId, getCookie("Language"))}</p>
                            <br />
                            <p><i class="ion-calendar push-5-r"></i> @Homemade.UI.Resources.Homemade.Date : ${locations[i].drivers.orders[ix].master.createDate}</p>
                            <p><i class="ion-location push-5-r"></i> @Homemade.UI.Resources.Homemade.PickupAddress : ${locations[i].drivers.orders[ix].master.branchAddress}</p>
                            <p><i class="ion-location push-5-r"></i> @Homemade.UI.Resources.Homemade.DropOffAddress : ${locations[i].drivers.orders[ix].master.receiverAddress} </p>
                            <p><a target="_blank" href="/Trip/TripDetails/IndexMap/${locations[i].drivers.orders[ix].master.orderId}" data-toggle="tooltip" data-placement="top" title="@Homemade.UI.Resources.Homemade.TripDetails"><i class="ion-eye"></i></a></p>
                        </div>`;



                    }

                }

            }

            //debugger;
            const content = `
<div id="content">
    <div id="siteNotice">
        <div id="bodyContent" style="padding: 15px 15px !important;">
            <div class="capt-wrap">
                <div class="cap-img">
<img id="currentPhoto" src="${"https://cdn.made-home.com/Shared/Images/Drivers/" + locations[i].drivers.driverPicture}" onerror="this.src='https://cdn.made-home.com/Shared/Images/noImage.png'" alt="" style="width: 10%;height: 100%;">

 </div>
                <div class="cap-info">
                    <h5> ${getCookie("Language") === "ar" ? locations[i].drivers.driverNameAr : locations[i].drivers.driverNameEn} <a href="/Pickup/AssignDriver/DetailsMapById/${locations[i].drivers.driverId}" target='_blank'>
${getCookie("Language") === "ar" ? "تفاصيل الكابتن" : "Captain details"}
 </a></h5>
                    <p><i class="ion-android-call push-5-r"></i>${locations[i].drivers.phoneNumber} </span></p>
 <h5 class="text-left"><span class="${getDriverStstus(locations[i].drivers.status)}"></span> <span class="d_${getDriverStstus(locations[i].drivers.status)}"> ${getDriverStstus(locations[i].drivers.status)
                    .replace("notavailable", "@Homemade.UI.Resources.Homemade.Offline").replace("available", "@Homemade.UI.Resources.Homemade.Available").replace("busy", "@Homemade.UI.Resources.Homemade.Busy")} </span></h5>
                </div>
            </div>
            ${tripdata}

        </div>
    </div>
</div>
`;

            infowindow = new google.maps.InfoWindow();

            // generate marker
            var marker = new google.maps.Marker({
                position: locations[i].position,
                icon: {
                    path: icons[locations[i].type].icon,
                    fillColor: icons[locations[i].type].fillColor,
                    fillOpacity: 1,
                    scale: .06,
                    strokeColor: icons[locations[i].type].strokeColor,
                    strokeWeight: 1.5,
                },
                map: map
            });
          //  alert(locations[i].driverId);
            // set id to marker
            marker.setValues({ type: "point", id: locations[i].driverId, d_status: locations[i].type });
            // push marker in array
            markers.push(marker);

            // open info window on marker click
            //if (infowindow) {
            //    infowindow.close();
            //}

            google.maps.event.addListener(marker, 'click', (function (marker, content, infowindow) {


                return function () {
                    if (activeInfoWindow) { activeInfoWindow.close(); }
                    activeInfoWindow = infowindow;

                    infowindow.setContent(content);
                    infowindow.open(map, marker);
                };
            })(marker, content, infowindow));
        };
    }

    /**
     *
     * @@param lat
     * @@param lng
     * @@param _id
     * @@param status
     */
    function moveTheCar(lat, lng, _id, status) {
        ////debugger;
        var oldmarker = markers.find(fruit => fruit.id == _id);

        var newlatLng = new google.maps.LatLng({ lat: lat, lng: lng })

        oldmarker != null ? getDriverStstus(status) : "";
        oldmarker.setIcon({
            path: icons[getDriverStstus(status)].icon,
            fillColor: icons[getDriverStstus(status)].fillColor,
            fillOpacity: 1,
            scale: .06,
            strokeColor: icons[getDriverStstus(status)].strokeColor,
            strokeWeight: 1.5,
            rotation: google.maps.geometry.spherical.computeHeading(oldmarker.getPosition(), newlatLng)
        });
        $('.cap-info').html("<span class='" + status + "'></span> <span class='d_" + getDriverStstus(status) + "'> " + getDriverStstus(status)+" </span>")
        animatedMove(oldmarker, 1, oldmarker.position, newlatLng);

        //  delete markers[markers.indexOf(ttMarker.find(fruit => fruit.id === id))]
    }

    /**
     *
     * @@param marker Old marker
     * @@param t time animation move
     * @@param current currunt location
     * @@param moveto new position
     */
    function animatedMove(marker, t, current, moveto) {
        ////debugger;
        //var template = [
        //    '<?xml version="1.0"?>',
        //    '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="32" height="32" x="0" y="0" viewBox="0 0 512 512" xml:space="preserve"><g xmlns="http://www.w3.org/2000/svg"><path d="M326.62 370.719l77.178-30.896a17.65 17.65 0 0 0 11.096-16.366V300.1l-88.274 35.31v35.309zM185.381 370.719v-35.31L97.106 300.1v23.357a17.65 17.65 0 0 0 11.096 16.366l77.179 30.896z" fill="#00000000" data-original="#e38100"/></g><path xmlns="http://www.w3.org/2000/svg" d="M190.898 491.902l30.331 12.994a88.649 88.649 0 0 0 69.543 0l30.331-12.95c34.886-14.839 56.328-50.378 53.185-88.16L361.93 255.962l12.694-151.699c2.966-35.875-16.251-69.94-48.498-85.944l-6.965-3.469a141.743 141.743 0 0 0-126.321 0l-6.965 3.469c-32.247 16.004-51.464 50.069-48.498 85.944l12.694 151.699-12.358 147.86c-3.108 37.755 18.325 73.25 53.185 88.08z" fill="#46c37b" data-original="#ffbc05"/><path xmlns="http://www.w3.org/2000/svg" d="M138.33 396.23c49.672 65.508 133.921 94.63 213.439 73.771a87.895 87.895 0 0 1-30.667 21.901l-30.331 12.994a88.649 88.649 0 0 1-69.543 0l-30.331-12.95c-34.886-14.839-56.328-50.378-53.185-88.16l.618-7.556z" fill="#00000000" data-original="#e38100"/><path xmlns="http://www.w3.org/2000/svg" d="M324.36 368.795l2.26-1.474a17.647 17.647 0 0 0 7.803-16.472l-7.803-77.337H185.381l-7.768 77.337a17.656 17.656 0 0 0 7.768 16.472l2.225 1.474c41.426 27.524 95.318 27.524 136.754 0z" fill="#363636" data-original="#23aec8"/><path xmlns="http://www.w3.org/2000/svg" d="M323.027 369.607c-41.277 26.668-94.436 26.35-135.386-.812l-2.26-1.474a17.647 17.647 0 0 1-7.803-16.472l5.941-59.144a202.72 202.72 0 0 0 139.508 77.902z" fill="#363636" data-original="#1967a3"/><path xmlns="http://www.w3.org/2000/svg" d="M326.62 150.033H185.381l-6.779-40.677a17.658 17.658 0 0 1 8.827-18.335l17.116-9.507a105.918 105.918 0 0 1 102.893 0l17.116 9.507a17.657 17.657 0 0 1 8.827 18.335l-6.761 40.677z" fill="#363636" data-original="#23aec8"/><path xmlns="http://www.w3.org/2000/svg" d="M187.437 91.022l8.624-4.793a290.46 290.46 0 0 0 121.042 63.805H185.381l-6.779-40.677a17.634 17.634 0 0 1 8.835-18.335z" fill="#363636" data-original="#1967a3"/><g xmlns="http://www.w3.org/2000/svg"><path fill="#4e4e4e" data-original="#555160" d="M342.788 410.912l-35.31 52.97-14.692-9.795 35.31-52.969zM219.193 454.104l-14.692 9.794-35.31-52.97 14.691-9.793z"/></g></svg>'
        //].join('\n');

        //var svg = template;
        //var blob = new Blob([svg], { type: 'image/svg+xml' });
        //var blobUrl = URL.createObjectURL(blob);

        //var image = {
        //    url: blobUrl,
        //    //anchor: new google.maps.Point(13, 13)
        //};



        //if (label) {
        //    marker.setTitle(label);
        // }

        var deltalat = (moveto.lat() - current.lat()) / 100;
        var deltalng = (moveto.lng() - current.lng()) / 100;

        var delay = 10 * t;
        for (var i = 0; i < 100; i++) {
            (function (ind) {
                setTimeout(
                    function () {
                        var lat = marker.position.lat();
                        var lng = marker.position.lng();
                        lat += deltalat;
                        lng += deltalng;
                        latlng = new google.maps.LatLng(lat, lng);
                        marker.setPosition(latlng);
                    }, delay * ind
                );
            })(i)
        }
    }
    // Sets the map on all markers in the array.
    function setMapOnAll(map) {
        for (let i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
        setMapOnAll(null);
    }

    // Shows any markers currently in the array.
    function showMarkers() {
        setMapOnAll(map);
    }

    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
        clearMarkers();
        markers = [];
    }

    function carMarkerDisplayed(status) {
        ////debugger;

        for (var i = 0; i < markers.length; i++) {
            if (markers[i].d_status == status) {
                if ($('#' + status + '').is(":checked")) {
                    markers[i].setVisible(true); // maps API hide call
                } else {
                    markers[i].setVisible(false); // maps API hide call
                }
            }

        }

    }
    function Btn_SearchthisArea() {
        deleteMarkers();
            SearchthisArea();

    }
    function SearchthisArea() {
        //debugger;
        $("#Div_Loading").css("display", "block");

        const center = map.getCenter();

        var lat0 = map.getBounds().getNorthEast().lat();
        var lng0 = map.getBounds().getNorthEast().lng();
        var lat1 = map.getBounds().getSouthWest().lat();
        var lng1 = map.getBounds().getSouthWest().lng();

        var dis = google.maps.geometry.spherical.computeDistanceBetween(
            new google.maps.LatLng(center.lat(), center.lng()), new google.maps.LatLng(lat0, lng0)) / 100;

        //alert("C Lat :" + center.lat() + "," + " C Lng : " + center.lng() + "Lat :"+ lat0+ ","+ " Lng : "+ lng0+ " ,Dis : " + dis);
       // alert(google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(31.152303582058344, 29.97651130585411), new google.maps.LatLng(30.0444183, 31.23571)));
        //AdminGetDrivers(center.lat(), center.lng(), dis);

        ConnectSocket(center.lat(), center.lng(), dis);
        $("#area_search").hide();
        $("#Div_Loading").css("display", "none");

    }
    function searchByCountry() {
        //debugger;
        var newlatlangString = $("#CityID option:selected").val();
        var res = newlatlangString.split(",");

        var newlatlang = { lat: parseFloat(res[0]), lng: parseFloat(res[1]) };

        map.setCenter(newlatlang);
        map.setZoom(10); // Why 17? Because it looks good.
        setTimeout(function () {
            SearchthisArea();
        }, 500);



    }


@*Change map Full Screen Btn Position*@
    function getCookie(cname) {
        var name = cname + "=";
        var decodedCookie = decodeURIComponent(document.cookie);
        var ca = decodedCookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }
    function changeBtnPostion() {
        setTimeout(function () {
            //debugger;
            var sss = $('.gm-fullscreen-control');
           // alert(getCookie("Language"));
            if (getCookie("Language") === "ar") {
                $('.gm-fullscreen-control').css("right", "unset");
                $('.gm-fullscreen-control').css("left", "0px");

            }
        }, 1000);
    }
</script>


<script>
      @* Chart *@

    /** */
    function ReloadTripChart() {
        jQuery(function () { TripFinBaseCompChartJSv2.init(); });

    }
    function ReloadFinancesChart() {
        jQuery(function () { TripFinBaseCompChartJSv2.initFini(); });

    }


    function UpdateTripChartData() {
        $.ajax({
            type: "GET",
            url: '/home/GetDashSummaryChart',
            dataType: "json",
            async: true,
        }).done(function (result) {
            //debugger;

            trips_TripsNum = result.trips;
            trips_Canceled = result.canceled;
            trips_Delivered = result.delivered;

            ReloadTripChart();

        });
    }

    function UpdateFinancesChartData() {
        $.ajax({
            type: "GET",
            url: '/home/GetDashSummaryChartFinances',
            dataType: "json",
            async: true,

            success: function (result) {
                //debugger;





                finances_debtClient = result.debtClient;
                finances_creditDriver = result.creditDriver;
                finances_creditClient = result.creditClient;
                finances_companyCharge = result.companyCharge;
                finances_driverCharge = result.driverCharge;
                ReloadFinancesChart();

            },
            error: function () {

            }
        });
    }


    // Chart.js v2 Script
    var BaseCompChartJSv2 = function () {
        //debugger;
        var initChartsChartJSv2 = function (online, offline, busy) {
            //debugger;
            // Set Global Chart.js configuration
            Chart.defaults.global.defaultFontColor = '#999';
            Chart.defaults.global.defaultFontFamily = 'Tajawal';
            Chart.defaults.global.defaultFontStyle = '600';
            Chart.defaults.scale.gridLines.color = "rgba(0,0,0,.05)";
            Chart.defaults.scale.gridLines.zeroLineColor = "rgba(0,0,0,.1)";
            Chart.defaults.global.elements.line.borderWidth = 2;
            Chart.defaults.global.elements.point.radius = 4;
            Chart.defaults.global.elements.point.hoverRadius = 6;
            Chart.defaults.global.tooltips.titleFontFamily = 'Tajawal';
            Chart.defaults.global.tooltips.bodyFontFamily = 'Tajawal';
            Chart.defaults.global.tooltips.cornerRadius = 5;
            Chart.defaults.global.legend.labels.boxWidth = 12;

            // colors
            var success = '#46c37b',
                info = '#70b9eb',
                danger = '#d26a5c',
                warning = '#f3b760',
                successHover = '#3c763d',
                infoHover = '#31708f',
                dangerHover = '#a94442',
                warningHover = '#d8993e';


            var $captains = jQuery('.captains-chart');

            var $captainsData = {
                labels: [
                    '@Homemade.UI.Resources.Homemade.Online',
                    '@Homemade.UI.Resources.Homemade.Offline',
                    '@Homemade.UI.Resources.Homemade.Busy'
                ],
                datasets: [{
                    data: [
                        online,
                        offline,
                        busy
                    ],
                    backgroundColor: [
                        success,
                        danger,
                        warning
                    ],
                    hoverBackgroundColor: [
                        successHover,
                        dangerHover,
                        warningHover
                    ],
                    borderWidth: [
                        0,
                        0,
                        0
                    ]
                }]
            };

            // Init Charts
            $captainsChart = new Chart($captains, { type: 'doughnut', data: $captainsData });

        };

        return {
            init: function (online, offline, busy) {
                // Init charts
                //debugger;
                initChartsChartJSv2(online, offline, busy);
            }
        };
    }();

    var TripFinBaseCompChartJSv2 = function () {

        var TripChartsChartJSv2 = function () {
            // Set Global Chart.js configuration
            Chart.defaults.global.defaultFontColor = '#999';
            Chart.defaults.global.defaultFontFamily = 'Tajawal';
            Chart.defaults.global.defaultFontStyle = '600';
            Chart.defaults.scale.gridLines.color = "rgba(0,0,0,.05)";
            Chart.defaults.scale.gridLines.zeroLineColor = "rgba(0,0,0,.1)";
            Chart.defaults.global.elements.line.borderWidth = 2;
            Chart.defaults.global.elements.point.radius = 4;
            Chart.defaults.global.elements.point.hoverRadius = 6;
            Chart.defaults.global.tooltips.titleFontFamily = 'Tajawal';
            Chart.defaults.global.tooltips.bodyFontFamily = 'Tajawal';
            Chart.defaults.global.tooltips.cornerRadius = 5;
            Chart.defaults.global.legend.labels.boxWidth = 12;

            // colors
            var success = '#46c37b',
                info = '#70b9eb',
                warning = '#f3b760';


            var $trips = jQuery('.trips-chart');

            var $tripsData = {
                labels: labelsName,
                datasets: [
                    {
                        label: '@Homemade.UI.Resources.Homemade.Trips_Num',
                        fill: true,
                        backgroundColor: 'rgba(220,220,220,1)',
                        borderColor: 'rgba(220,220,220,1)',
                        pointBackgroundColor: 'rgba(220,220,220,1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(220,220,220,1)',
                        data: trips_TripsNum
                    },
                    {
                        label: '@Homemade.UI.Resources.Homemade.Delivered',
                        fill: true,
                        backgroundColor: 'rgba(171, 227, 125, 1)',
                        borderColor: 'rgba(171, 227, 125, 1)',
                        pointBackgroundColor: 'rgba(171, 227, 125, 1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(171, 227, 125, 1)',
                        data: trips_Delivered
                    },
                    {
                        label: '@Homemade.UI.Resources.Homemade.Canceled',
                        fill: true,
                        backgroundColor: info,
                        borderColor: info,
                        pointBackgroundColor: info,
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: info,
                        data: trips_Canceled
                    }
                ]
            };

            // Init Charts
            $tripsChart = new Chart($trips, { type: 'bar', data: $tripsData });

        };
        var FininitChartsChartJSv2 = function () {
            // Set Global Chart.js configuration
            Chart.defaults.global.defaultFontColor = '#999';
            Chart.defaults.global.defaultFontFamily = 'Tajawal';
            Chart.defaults.global.defaultFontStyle = '600';
            Chart.defaults.scale.gridLines.color = "rgba(0,0,0,.05)";
            Chart.defaults.scale.gridLines.zeroLineColor = "rgba(0,0,0,.1)";
            Chart.defaults.global.elements.line.borderWidth = 2;
            Chart.defaults.global.elements.point.radius = 4;
            Chart.defaults.global.elements.point.hoverRadius = 6;
            Chart.defaults.global.tooltips.titleFontFamily = 'Tajawal';
            Chart.defaults.global.tooltips.bodyFontFamily = 'Tajawal';
            Chart.defaults.global.tooltips.cornerRadius = 5;
            Chart.defaults.global.legend.labels.boxWidth = 12;

            // colors
            var success = '#46c37b',
                info = '#70b9eb',
                warning = '#f3b760';



            var $finances = jQuery('.finances-chart');

            var $financesData = {
                labels: labelsName,
                datasets: [
                    {
                        label: '@Homemade.UI.Resources.Homemade.Dept_Client',
                        fill: true,
                        backgroundColor: 'rgba(100, 100, 100, 0)',
                        borderColor: 'rgba(220,220,220,1)',
                        pointBackgroundColor: 'rgba(220,220,220,1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(220,220,220,1)',
                        data: finances_debtClient
                    },
                    {
                        label: '@Homemade.UI.Resources.Homemade.Creidt_Client',
                        fill: true,
                        backgroundColor: 'rgba(100, 100, 100, 0)',
                        borderColor: 'rgba(171, 227, 125, 1)',
                        pointBackgroundColor: 'rgba(171, 227, 125, 1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(171, 227, 125, 1)',
                    data: finances_creditClient
                    },
                    {
                        label: '@Homemade.UI.Resources.Homemade.Driver_Credit',
                        fill: true,
                        backgroundColor: 'rgba(100, 100, 100, 0)',
                        borderColor: info,
                        pointBackgroundColor: info,
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: info,
                    data: finances_creditDriver
            },
                     {
                        label: '@Homemade.UI.Resources.Homemade.Driver_Charge',
                        fill: true,
                        backgroundColor: 'rgba(100, 100, 100, 0)',
                        borderColor: info,
                        pointBackgroundColor: info,
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: info,
                    data: finances_driverCharge
            },
                      {
                        label: '@Homemade.UI.Resources.Homemade.Company_Charge',
                        fill: true,
                        backgroundColor: 'rgba(100, 100, 100, 0)',
                        borderColor: info,
                        pointBackgroundColor: info,
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: info,
                    data: finances_companyCharge
                    },
                    //{
                    //    label: '@Homemade.UI.Resources.Homemade.Comp_Profit',
                    //    fill: true,
                    //    backgroundColor: 'rgba(100, 100, 100, 0)',
                    //    borderColor: warning,
                    //    pointBackgroundColor: warning,
                    //    pointBorderColor: '#fff',
                    //    pointHoverBackgroundColor: '#fff',
                    //    pointHoverBorderColor: warning,
                    //    data: finances_CompProfit
                    //},
                    //{
                    //    label: 'Debt Cap',
                    //    fill: true,
                    //    backgroundColor: 'rgba(100, 100, 100, 0)',
                    //    borderColor: danger,
                    //    pointBackgroundColor: danger,
                    //    pointBorderColor: '#fff',
                    //    pointHoverBackgroundColor: '#fff',
                    //    pointHoverBorderColor: danger,
                    //    data: [0, 54, 75, 80, 74, 80, 78]
                    //},

                  // {
                  //     label: '@Homemade.UI.Resources.Homemade.Dept_Client',
                  //     fill: true,
                  //     backgroundColor: 'rgba(100, 100, 100, 0)',
                  //     borderColor: success,
                  //     pointBackgroundColor: success,
                  //     pointBorderColor: '#fff',
                  //     pointHoverBackgroundColor: '#fff',
                  //     pointHoverBorderColor: success,
                  //     data: finances_DebtPasenger
                  // },
                  // {
                  //     label: '@Homemade.UI.Resources.Homemade.Dept_Driver',
                  //     fill: true,
                  //     backgroundColor: 'rgba(100, 100, 100, 0)',
                  //     borderColor: success,
                  //     pointBackgroundColor: success,
                  //     pointBorderColor: '#fff',
                  //     pointHoverBackgroundColor: '#fff',
                  //     pointHoverBorderColor: success,
                  //     data: finances_DebtDriver
                  // },
                  // {
                  //     label: '@Homemade.UI.Resources.Homemade.Debt_Comp',
                  //     fill: true,
                  //     backgroundColor: 'rgba(100, 100, 100, 0)',
                  //     borderColor: success,
                  //     pointBackgroundColor: success,
                  //     pointBorderColor: '#fff',
                  //     pointHoverBackgroundColor: '#fff',
                  //     pointHoverBorderColor: success,
                  //     data: finances_DebtComp
                  // }

                ]
            };

            // Init Charts
            $financesChart = new Chart($finances, { type: 'line', data: $financesData });

        };

        return {
            init: function () {
                // Init charts
                TripChartsChartJSv2();
            },
            initFini: function () {
                // Init charts
                FininitChartsChartJSv2();
            }
        };
    }();

</script>

 



@* document ready *@
<script>
    //$(document).ready(function () {
    //    setTimeout(function () {
    //        UpdateTripChartData();
    //        UpdateFinancesChartData();
    //        console.log("%cBeware, %s", css, 'This Mode For Developers Only !');
    //    }, 1000);
    //});
 

</script>