@model SettingPopUpModel

@{
    var props = Model.Mdl.GetType().GetProperties().AsEnumerable();
    if (Model.IncludeProperties != "")
    {
        props = props.Where(x => Model.IncludeProperties.Split(",").Contains(x.Name)).ToList();
    }

}

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modal-block-large" aria-hidden="true">
    <div class="modal-dialog modal-dialog-popout modal-dialog-scrollable" role="document">

        <div class="modal-content">
            <div class="block block-themed block-transparent remove-margin-b">
                <div class="block-header">
                    <h3 class="block-title" id="title">
                        @Homemade.UI.Resources.Homemade.Add
                    </h3>
                    <div class="block-options">
                        <button type="button" class="close btn-block-option" data-dismiss="modal" aria-label="Close">
                            <i class="ion-android-close"></i>
                        </button>
                    </div>
                </div>
                <div class="block-content modal-body">
                    <form method="post" id="frmCreate" onsubmit="return false"
                          data-ajax="true"
                          data-ajax-complete="completed"
                          data-ajax-method="post">

                        @foreach (var item in props)
                        {
                            if (item.Name == Model.HiddenId)
                            {
                                @Html.Hidden(item.Name)
                            }
                            else
                            {
                                <div class="form-group">
                                    <div class="form-material">
                                        @Html.TextBox(item.Name , "" , htmlAttributes: new { @class = "form-control" })
                                        <label for="material-text2">
                                            @if (item.Name.ToLower().Contains("ar"))
                                            {
                                                @Homemade.UI.Resources.Homemade.Name_Ar
                                            }
                                            else
                                            {
                                                @Homemade.UI.Resources.Homemade.Name_En
                                            }
                                            <span style="color:red">*</span>
                                        </label>
                                        @Html.ValidationMessage(item.Name , "" , new { style = "color:red" })
                                    </div>
                                </div>
                            }
                        }

                    </form>
                </div>
            </div>
            <div class="modal-footer border-white-op-t">
                <button class="btn btn-sm btn-default" type="button" data-dismiss="modal"> @Homemade.UI.Resources.Homemade.Close </button>
                <button class="btn btn-sm bg-orange" id="btnSave" type="button"> @Homemade.UI.Resources.Homemade.save</button>
            </div>
        </div>
    </div>
</div>
